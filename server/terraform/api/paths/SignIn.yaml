post:
  description: User signs in
  summary: User signs in
  tags:
    - Auth
  responses:
    "200":
      description: Returned when valid credentials have been provided
      content:
        application/json:
          schema:
            $ref: "../ApiDefinition.yaml#/components/schemas/SignInResponse"
          example:
            {
              "id_token": "eyJraWQiOiJqRGhXTFFlNjNyVGZLWjY2WmwzN1RDNU52VUtJdDhBZk51alNIRDdieTRNPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJjMmUwZDhjYy1lOTM2LTQ1ZTQtODAyYy04Mzk0ZGEzYmJmMDkiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9uWXJoQU9adXIiLCJjb2duaXRvOnVzZXJuYW1lIjoiZGFtaWFucCszQGFwYWRtaS5jb20iLCJvcmlnaW5fanRpIjoiMjMwMWRjNGMtZjY4Zi00ZDNjLWI1ZmUtM2FiOWVlMDhhMGY5IiwiYXVkIjoiNTRpcXEzNWIzNjY4dmkwYXZxc25wcDBiMm4iLCJldmVudF9pZCI6IjRiNmYwNTljLWY4ZmUtNDE1YS04OGI1LTZkZGY3OGQyZmM0ZiIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNjUyOTQxNDgzLCJleHAiOjE2NTMwMjc4ODMsImlhdCI6MTY1Mjk0MTQ4MywianRpIjoiNGE5NGJiM2ItNDdmNS00NTNmLTg0OTktYTY4YmNkODZiZWMzIiwiZW1haWwiOiJkYW1pYW5wKzNAYXBhZG1pLmNvbSJ9.c9Yli482kAbdTOESd3QOZGyOm0mNecqpJG1sdlhNbQMokt9wZUjs5wmR1Uk0FMCwpjSTD7IsGY9ofWpuP6HepU1mKa-Aq1xqNZA6v2j34Nw98VOnPgRQbNW2LR4Vhfs8ZBfC6aSunKpyxhncp9rmPqndN7uksWvQBRZOasq56xfWcUZZFGn7DfS8H2GVxvi0U8FMqvnaDvNSohSs74GHv025Pp8hXViDwckrOR4YaaAUBG03EXFc-wMEdd0yPLzf_zq69zyKCocsf7RM4KUSCPXPLMywu3xn75zX7SNYuTHwk3-ILA9QM2O2YU8oV1-1qnEEgKHm9LM4UBYz_egDrA",
              "access_token": "eyJraWQiOiJDYkJzeDNMSlpXR2xqYzR2ZVZrcmg5T1F2UWlTUnhxMHFRa3hzYUFocXlrPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJjMmUwZDhjYy1lOTM2LTQ1ZTQtODAyYy04Mzk0ZGEzYmJmMDkiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb21cL2V1LXdlc3QtMV9uWXJoQU9adXIiLCJjbGllbnRfaWQiOiI1NGlxcTM1YjM2Njh2aTBhdnFzbnBwMGIybiIsIm9yaWdpbl9qdGkiOiIyMzAxZGM0Yy1mNjhmLTRkM2MtYjVmZS0zYWI5ZWUwOGEwZjkiLCJldmVudF9pZCI6IjRiNmYwNTljLWY4ZmUtNDE1YS04OGI1LTZkZGY3OGQyZmM0ZiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NTI5NDE0ODMsImV4cCI6MTY1MzAyNzg4MywiaWF0IjoxNjUyOTQxNDgzLCJqdGkiOiJmYzA1YTMzMi0xOGY4LTQ5NjUtYjNjYS1mZjg0ZDZhNjcyZGIiLCJ1c2VybmFtZSI6ImRhbWlhbnArM0BhcGFkbWkuY29tIn0.YnUeICMYxUo12RefExhP3Yx6DzhJQn19YWEPBk8dLnwWwcAtZ72m-YZCjuZoPwGQLJXXckBxmZ_suR2cotH1DSDDzJVH-MzFr9ag02qgmRo8xaQTmJzhE2dptgxvor4JZU7kH38UMHaxy4kTKnbPGgP_0M7_vu0CZBGnJ2DXA_Ua6qBS07z66rZpTMTUJz9Enfs0s7xPsSUII3aENYSHjTEUriwmIs5n2GnvHDWDpR5ayPGn-JkijNXVtVA6iUgasgpkXZKlVPMtOW57qXPzyTpIWNcQlHHg3aLpPGwMAiDxTQwmiYlcaBIhqcK0Fb36zOdya1AO_MYGYGwCkrOkZg",
              "refresh_token": "eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.KEfhs2x67jR9577RZtWhqRjBr6m4AABz3QVhfaBKkbCFZ-qsd6Yb-2bJJsLv2qrI3YlN3wlnMZy7vpsZQ6Fe225VQCnja_wSQvhajJl39VokE75bp_vgl0LdZZqWQtdtWC8nhma1DB0flN0rkzuJz_bTx5Jrr01ZjJ10RVrhxxA5D5UY6ObCsAClB4LSvntuU98fbu5bJmVwP39tzXSAo9n5_Ii1lamUrnmaVb_jRRRW6pwu3e_eVZ_DtSly9pt0Q5NvcOmh_GCIj8C-8h5AH_GA8naYEULqP8tzJFOw3ckPQeHI-f3gCDyRhowQFTfoKNhtQNPqygrYy_PEcaTWCQ.QrpXCFNPRTkeWJ4Q.nOlVL9bNipDLKmhJR-vBmIXA7Tc91OTxoHDecMaS8jGsZ6Srp0V7wMozwkm0pXZL-NVELcoWGMsAHlfWWPKgQ9TZdkhAdiQuxNNQDOzThZgCFSMHpO8aFvHYSyjPWqQhz4aGPe_7lY9EDpQ6jttFTJye84zL-QnQqIVYqCSkUDsuYg39HlyRmQfJNyMXAE5zULTIsB37nqtmbQClp99C38viOeg3s7BwnMXdaPx3B7rtMHs95gDeBD5gnZCo-Qj6TwU0bvSv7PB81M9lsC91oJ-_UISfkLxeDWVyRs96WNSCDPqb41vfpXhZqjZMit90WbKzPq5mOOmioJj7ds4s42ZLjo0Q4IxYRfu51FAdklZ03tIjXMz7YtJEHxww98xew2pepTplv3VceZ_0mR6UFYVHFCa1FR0G5-6ZqoHtqPeEnDEmAY0yBKXP7qre2W8pR_JFoSOiu7pyuCk4DwIfUAK9BomalmjU17C14pdqJ7Mn77YBUEeye8FTr2s2F3ZJwbJyp4xOVho9xIQCELsdZXOQWVFYjbrywznEc7-rGUSoZt9MF9r7AepIzMGb7-E4f4yFVn1V2YBhTzPdhu70kVSYY1UJTbZ7FREFCzeL3g9z4k2uJGk8pu3X4tOKdIHSuvCsr7uyWzrtXGw2g-NhCR_716yL64Pg9EFSbHQFg30aiGMnZ1Is1MQB1hnwl6IjI-6u_Ljjo0UQ1aku8awaePd0Ud0kuaVQYNE-sr-6wXm4Ubra2uyY1UzCEPUIBHz5EuMddiMBeZs9erlPi4LKV9pa7I3yuX-FSVUonMWTYeri4HNy7gc6aBdDgFHteFaeqiaD1pxJA7Zz4WRwci3lMstoFXW8fNmpFDc2ngY5fXS-Y5TspSjPBemCSauiMh8UT5ep8Zcm9vo1HSwBAL1vMSjtbBPSqkf7bJeuPs8-r1NpoAapoU3pG4rMO2l7KPq2d1mWIHqAdueMAtIEVnzfO3eTZRLpv-lb-jzLPITLcVrASUH9t2DL7WjO9cxhie7lsFADUT48pZuCl4lsjIf31xvvKgjk9vS7v2etUD_LP80C7bRHb1z-xBGBbmSuEJrDtIXtcLjTVQAj3J2g2xoBHWPh42hr4O4QECodL1Rq2vyAOXVpwUHLlnE0Q-8OFC08Ogc-sL3KNdWAP1Xatc-pX41Y1v_shZRJohgwR_eskjIXhu0WVNg0XlcPgDn2otAndD16kzcYfmOdeERjfTTLNOJw-H1uMeh1Rm-fNJCBDjO84q-JL1-dnFKMbuYUR1aXGwqrioE5DGM1AuLZ-n0vjH8YDgNygmw.hgZ7qkSQlo8KvN10x7wzDQ",
              "profile":
                {
                  "id": "1be09b65-5a67-4b33-ae57-a68f5320a282",
                  "name": "John Smith",
                  "identities": [],
                  "picture": null,
                },
            }
    "401":
      description: Returned when invalid credentials have been provided
      content:
        application/json:
          schema:
            $ref: "../ApiDefinition.yaml#/components/schemas/ErrorMessageWrapper"
          example: { "error": "Invalid credentials", "data": null }
    "500":
      $ref: "./../generic/InternalServerError.yaml"

  x-amazon-apigateway-integration:
    uri: ${signIn_lambda_arn}
    passthroughBehavior: "when_no_match"
    httpMethod: "POST"
    type: "aws_proxy"
  parameters: []

  requestBody:
    content:
      application/json:
        schema:
          $ref: "../ApiDefinition.yaml#/components/schemas/SignInRequest"

options:
  summary: CORS support
  tags:
    - Auth
  description: |
    Enable CORS by returning correct headers
  x-amazon-apigateway-integration:
    type: mock
    requestTemplates:
      application/json: |
        {
          "statusCode" : 200
        }
    responses:
      "default":
        statusCode: "200"
        responseParameters:
          method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
          method.response.header.Access-Control-Allow-Methods: "'*'"
          method.response.header.Access-Control-Allow-Origin: "'*'"
        responseTemplates:
          application/json: |
            {}
  responses:
    200:
      description: Default response for CORS method
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
